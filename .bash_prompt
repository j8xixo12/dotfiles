# ex: ts=2 sw=2 et filetype=bash

# ANSI color codes
bold="\e[1m"
reset="\e[0m"
black="\e[030m"
red="\e[031m"
green="\e[38;5;82m"
yellow="\e[033m"
blue="\e[034m"
magenta="\e[035m"
cyan="\e[036m"
white="\e[037m"

prompt_devenv() {
  if [ -n "$DEVENVFLAVOR" ]; then
    echo -e " [${cyan}${bold}dev: $DEVENVFLAVOR${reset}]"
  fi
}

prompt_git() {
  # Check if we're in a git repo (exit early if not)
  git rev-parse --is-inside-work-tree &>/dev/null || return
  
  # Enable/disable caching (set to 0 to disable)
  local use_cache=1
  local cache_seconds=5
  
  # Get the git directory for cache file path
  local git_dir=$(git rev-parse --git-dir 2>/dev/null)
  local cache_file="/tmp/git_prompt_${USER}_$(echo "$git_dir" | md5sum | cut -d' ' -f1)"
  
  # Check if cache exists and is recent
  if [ "$use_cache" -eq 1 ] && [ -f "$cache_file" ]; then
    # Try both stat formats for better compatibility
    local cache_time=$(stat -c %Y "$cache_file" 2>/dev/null || stat -f %m "$cache_file" 2>/dev/null)
    local current_time=$(date +%s)
    
    if [ -n "$cache_time" ] && [ $((current_time - cache_time)) -lt "$cache_seconds" ]; then
      cat "$cache_file"
      return
    fi
  fi
  
  local t=''
  local s=''
  local c=''
  
  # Get branch/tag/commit info (same as original)
  if s=$(git symbolic-ref --quiet --short HEAD 2>/dev/null); then
    t='\uf418'
  elif s=$(git describe --tags --abbrev=0 2>/dev/null); then
    t='\uf02c'
  elif s=$(git rev-parse --short HEAD 2>/dev/null); then
    t='\ue729'
  else
    s='(unknown)'
    t='\uf29c'
  fi
  
  # Use faster method to check for changes
  if [ -n "$(git status --porcelain --no-optional-locks -z 2>/dev/null | head -c1)" ]; then
    c='*'
  fi
  
  local output=" [${cyan}${t} ${s}${yellow}${c}${reset}]"
  echo -e "$output"
  
  # Save to cache if enabled
  if [ "$use_cache" -eq 1 ]; then
    echo -e "$output" > "$cache_file"
  fi
}

arrow() {
  echo -e "\uf307"
}

check_ssh() {
  if [[ -n "${SSH_CLIENT}" ]]; then
    echo -e " [${bold}${green}$(hostname)${reset}]"
  fi
}
# Set the terminal title to the current working directory.
PS1=""
PS1+="┌ ${bold}${green}\w${reset}\$(prompt_git)\$(prompt_devenv)\$(check_ssh)\n"
PS1+="└$ "
export PS1
